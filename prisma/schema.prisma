// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  email     String      @unique
  name      String
  password  String
  posts     Post[]
  comments  Comment[]
  profile   Profile?

  followers Follow[] @relation("followings")
  followings Follow[] @relation("followers")
}

model Post {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  content   String
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  comments  Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
}

model Profile {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  image     String?
  about     String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
}

model Follow {
  followerId Int
  followingId Int
  followedAt DateTime @default(now())
  follower User @relation("followers", fields: [followerId], references: [id])
  following User @relation("followings", fields: [followingId], references: [id])

  @@id([followerId, followingId])
}
